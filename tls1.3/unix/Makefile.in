#
# This file is a Makefile for SenTcl.  If it has the name "Makefile.in"
# then it is a template for a Makefile;  to generate the actual Makefile,
# run "./configure", which is a configuration script generated by the
# "autoconf" program (constructs like "@foo@" will get replaced in the
# actual Makefile.
#
# $Header: /cvs/tcl/tls/unix/Makefile.in,v 1.5 1999/09/26 22:53:27 matt Exp $

# Current Tcl version;  used in various names.

PACKAGE = @PACKAGE@
VERSION = @MAJOR_VERSION@.@MINOR_VERSION@

#----------------------------------------------------------------
# Things you can change to personalize the Makefile for your own
# site (you can make these changes in either Makefile.in or
# Makefile, but changes to Makefile will get lost if you re-run
# the configuration script).
#----------------------------------------------------------------

# Default top-level directories in which to install architecture-
# specific files (exec_prefix) and machine-independent files such
# as scripts (prefix).  The values specified here may be overridden
# at configure-time with the --exec-prefix and --prefix options
# to the "configure" script.

prefix =	@prefix@
exec_prefix =	@exec_prefix@

# The following definition can be set to non-null for special systems
# like AFS with replication.  It allows the pathnames used for installation
# to be different than those used for actually reference files at
# run-time.  INSTALL_ROOT is prepended to $prefix and $exec_prefix
# when installing files.
INSTALL_ROOT =

# Directory in which to install libsentcl.so or libsentcl.a:
LIB_INSTALL_DIR =	$(INSTALL_ROOT)$(exec_prefix)/lib/$(PACKAGE)$(VERSION)

# Path to use at runtime to refer to LIB_INSTALL_DIR:
LIB_RUNTIME_DIR =	$(exec_prefix)/lib/$(PACKAGE)$(VERSION)

# To change the compiler switches, for example to change from -O
# to -g, change the following line:
CFLAGS = -O

# To disable ANSI-C procedure prototypes reverse the comment characters
# on the following lines:
PROTO_FLAGS =
#PROTO_FLAGS = -DNO_PROTOTYPE

# Some versions of make, like SGI's, use the following variable to
# determine which shell to use for executing commands:
SHELL =		/bin/sh

# Tcl used to let the configure script choose which program to use
# for installing, but there are just too many different versions of
# "install" around;  better to use the install-sh script that comes
# with the distribution, which is slower but guaranteed to work.

INSTALL =		@srcdir@/install-sh -c
INSTALL_PROGRAM =	${INSTALL}
INSTALL_DATA =		${INSTALL} -m 644

# The following symbol defines additional compiler flags to enable
# Tcl itself to be a shared library.  If Tcl isn't going to be a
# shared library then the symbol has an empty definition.

SHLIB_CFLAGS =	@TCL_SHLIB_CFLAGS@
SHLIB_LD =	@TCL_SHLIB_LD@
SHLIB_SUFFIX =	@TCL_SHLIB_SUFFIX@

LIB_FILE =	@LIB_FILE@

#----------------------------------------------------------------
# The information below is modified by the configure script when
# Makefile is generated from Makefile.in.  You shouldn't normally
# modify any of this stuff by hand.
#----------------------------------------------------------------

COMPAT_OBJS =	@TCL_COMPAT_OBJS@

AC_FLAGS =	@TCL_DEFS@
RANLIB =	@TCL_RANLIB@
SRC_DIR =	@srcdir@
TOP_DIR =	@srcdir@/..
GENERIC_DIR = 	$(TOP_DIR)/generic
COMPAT_DIR =	@TCL_SRC_DIR@/compat
UNIX_DIR = 	@srcdir@
SCRIPTS_DIR = 	$(TOP_DIR)/library
CC =		@TCL_CC@

SSL_DIR =	@SSL_DIR@

SSL_FLAGS =	-I${SSL_DIR}/include -DNO_PATENTS -DPRE_OPENSSL_0_9_4

SSL_LIBS =	-lssl -lcrypto

#----------------------------------------------------------------
# The information below should be usable as is.  The configure
# script won't modify it and you shouldn't need to modify it
# either.
#----------------------------------------------------------------


CC_SWITCHES =	${CFLAGS} ${SHLIB_CFLAGS} -I${GENERIC_DIR} -I${SRC_DIR} \
    -I${prefix}/include ${AC_FLAGS} ${PROTO_FLAGS} \
    ${ENV_FLAGS} ${SSL_FLAGS} @TCL_EXTRA_FLAGS@

LIBS =		 -L${SSL_DIR}/lib ${SSL_LIBS} @TCL_LIB_SPEC@ @TCL_LIBS@ -lc

GENERIC_OBJS = tls.o tlsIO.o tlsBIO.o tlsX509.o

UNIX_OBJS = 

OBJS = ${GENERIC_OBJS} ${UNIX_OBJS} ${COMPAT_OBJS}

GENERIC_HDRS = \
	$(GENERIC_DIR)/tls.h \
	$(GENERIC_DIR)/tlsInt.h

GENERIC_SRCS = \
	$(GENERIC_DIR)/tls.c \
	$(GENERIC_DIR)/tlsIO.c \
	$(GENERIC_DIR)/tlsBIO.c \
	$(GENERIC_DIR)/tlsX509.c

UNIX_HDRS = 

UNIX_SRCS = 

SRCS = $(GENERIC_SRCS) $(UNIX_SRCS)

all: ${LIB_FILE} 

# The following target is configured by autoconf to generate either
# a shared library or non-shared library for Tcl.
${LIB_FILE}: ${OBJS}
	rm -f ${LIB_FILE}
	@TCL_SHLIB_LD@ -o ${LIB_FILE} ${OBJS} @TCL_SHLIB_LD_LIBS@
	$(RANLIB) ${LIB_FILE}

test: 
	LD_LIBRARY_PATH=`pwd`:${LD_LIBRARY_PATH}; export LD_LIBRARY_PATH; \
	( echo cd $(TOP_DIR)/tests\; source all ) | tclsh80

install: install-binaries install-libraries install-man

# Note: before running ranlib below, must cd to target directory because
# some ranlibs write to current directory, and this might not always be
# possible (e.g. if installing as root).

install-binaries: $(LIB_FILE) 
	@for i in $(LIB_INSTALL_DIR) $(BIN_INSTALL_DIR) ; \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing $(LIB_FILE)"
	@$(INSTALL_DATA) $(LIB_FILE) $(LIB_INSTALL_DIR)/$(LIB_FILE)
	@(cd $(LIB_INSTALL_DIR); $(RANLIB) $(LIB_FILE))
	@chmod 555 $(LIB_INSTALL_DIR)/$(LIB_FILE)

install-libraries:
	@for i in $(INSTALL_ROOT)$(prefix)/lib $(LIB_INSTALL_DIR) \
		$(SCRIPT_INSTALL_DIR); \
	    do \
	    if [ ! -d $$i ] ; then \
		echo "Making directory $$i"; \
		mkdir $$i; \
		chmod 755 $$i; \
		else true; \
		fi; \
	    done;
	@echo "Installing pkgIndex.tcl"
	@$(INSTALL_DATA) $(UNIX_DIR)/pkgIndex.tcl $(LIB_INSTALL_DIR)/pkgIndex.tcl
	@echo "Installing tls.tcl"
	@$(INSTALL_DATA) $(SCRIPTS_DIR)/tls.tcl $(LIB_INSTALL_DIR)/tls.tcl

install-man:
	@echo "Installing tls.htm"
	@$(INSTALL_DATA) $(TOP_DIR)/tls.htm $(LIB_INSTALL_DIR)/tls.htm

Makefile: $(UNIX_DIR)/Makefile.in
	$(SHELL) config.status

pkgIndex.tcl: $(UNIX_DIR)/pkgIndex.tcl.in
	$(SHELL) config.status

clean:
	rm -f *.a *.o $(LIB_FILE) core errs *~ \#* TAGS *.E a.out \
		errors tcltest lib.exp

distclean: clean
	rm -rf Makefile config.status config.cache config.log tclConfig.sh \
		pkgIndex.tcl SUNW.* prototype

depend:
	makedepend -- $(DEPEND_SWITCHES) -- $(SRCS)

# Object files used on all Unix systems:

tls.o: $(GENERIC_DIR)/tls.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tls.c

tlsIO.o: $(GENERIC_DIR)/tlsIO.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tlsIO.c

tlsBIO.o: $(GENERIC_DIR)/tlsBIO.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tlsBIO.c

tlsX509.o: $(GENERIC_DIR)/tlsX509.c
	$(CC) -c $(CC_SWITCHES) $(GENERIC_DIR)/tlsX509.c

# compat binaries

fixstrtod.o: $(COMPAT_DIR)/fixstrtod.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/fixstrtod.c

getcwd.o: $(COMPAT_DIR)/getcwd.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/getcwd.c

opendir.o: $(COMPAT_DIR)/opendir.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/opendir.c

strncasecmp.o: $(COMPAT_DIR)/strncasecmp.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strncasecmp.c

strstr.o: $(COMPAT_DIR)/strstr.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strstr.c

strtod.o: $(COMPAT_DIR)/strtod.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtod.c

strtol.o: $(COMPAT_DIR)/strtol.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtol.c

strtoul.o: $(COMPAT_DIR)/strtoul.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/strtoul.c

tmpnam.o: $(COMPAT_DIR)/tmpnam.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/tmpnam.c

waitpid.o: $(COMPAT_DIR)/waitpid.c
	$(CC) -c $(CC_SWITCHES) $(COMPAT_DIR)/waitpid.c

.c.o:
	$(CC) -c $(CC_SWITCHES) $<

#
# Target to make sure that only symbols with "Sen" prefixes are
# exported.
#

checkexports: $(LIB_FILE)
	-nm -p $(LIB_FILE) | awk '$$2 ~ /[TDB]/ { print $$3 }' | sort -n

# DO NOT DELETE THIS LINE -- make depend depends on it.
